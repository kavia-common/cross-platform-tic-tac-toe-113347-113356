{"is_source_file": true, "format": "Dart", "description": "A Flutter application implementing a Tic Tac Toe game with UI components, game state management, and styling.", "external_files": ["package:flutter/material.dart"], "external_methods": ["runApp", "MaterialApp", "ThemeData", "ColorScheme.light", "Colors.white", "Colors.redAccent", "Colors.grey", "Colors.grey[300]", "Colors.grey[500]", "Colors.black87", "Colors.white", "Colors.redAccent", "Colors.grey[300]", "Colors.grey[500]", "Colors.black87", "Colors.white", "Colors.grey", "Colors.grey[200]", "Colors.grey[100]", "Colors.grey[800]", "BoxShadow", "Border", "BorderSide", "EdgeInsets", "SizedBox", "Center", "GridView", "SliverGridDelegateWithFixedCrossAxisCount", "GestureDetector", "AnimatedContainer", "AnimatedSwitcher", "ScaleTransition", "Text", "Icon", "ElevatedButton.icon", "OutlinedButton.icon", "Scaffold", "AppBar", "SafeArea", "SingleChildScrollView", "ConstrainedBox", "Column", "Expanded"], "published": ["main", "TicTacToeApp", "TicTacToeHomePage", "_TicTacToeHomePageState", "handleTap", "resetBoard", "resetAll"], "classes": [{"name": "TicTacToeApp", "description": "Root widget setting up application theme and home page."}, {"name": "TicTacToeHomePage", "description": "Main page widget managing game state and UI layout."}, {"name": "_TicTacToeHomePageState", "description": "State class containing game logic, UI rendering, and interaction handling."}], "methods": [{"name": "main", "description": "Entry point, runs the TicTacToeApp."}, {"name": "build", "description": "Constructs the UI for TicTacToeApp and the main game screen."}, {"name": "handleTap", "description": "Handles user tapping on a cell, updates game state."}, {"name": "_checkGameStatus", "description": "Determines if there's a winner or a draw after each move."}, {"name": "_hasWinner", "description": "Checks winning patterns and returns the winner symbol if any."}, {"name": "resetBoard", "description": "Resets the game board for a new round, preserving scores."}, {"name": "resetAll", "description": "Resets the entire game, including scores and board."}, {"name": "_playerColor", "description": "Returns the color associated with a player ('X' or 'O')."}, {"name": "_playerLabel", "description": "Builds a stylized label for player indicators."}, {"name": "_turnIndicator", "description": "Displays current turn or game result."}, {"name": "_scoreBoard", "description": "Displays scores of both players."}, {"name": "_gameBoard", "description": "Builds the responsive game grid with interactive cells."}, {"name": "_resetButtons", "description": "Builds buttons to restart game or reset scores."}], "calls": ["runApp", "MaterialApp", "ThemeData", "ColorScheme.light", "Colors.white", "Colors.redAccent", "Colors.grey", "Colors.grey[300]", "Colors.grey[500]", "Colors.black87", "Colors.white", "Colors.redAccent", "Colors.grey[300]", "Colors.grey[500]", "Colors.black87", "Colors.white", "Colors.grey", "Colors.grey[200]", "Colors.grey[100]", "Colors.grey[800]", "BoxShadow", "Border", "BorderSide", "EdgeInsets", "SizedBox", "Center", "GridView.builder", "SliverGridDelegateWithFixedCrossAxisCount", "GestureDetector", "AnimatedContainer", "AnimatedSwitcher", "ScaleTransition", "Text", "Icon", "ElevatedButton.icon", "OutlinedButton.icon", "Scaffold", "AppBar", "SafeArea", "SingleChildScrollView", "ConstrainedBox", "Column", "Expanded"], "search-terms": ["Flutter Tic Tac Toe", "Main Dart source", "Game state management", "Responsive grid layout", "Custom theme colors", "Game logic", "UI components", "Reset functionality", "Score tracking", "Turn indicator"], "state": 2, "file_id": 2, "knowledge_revision": 45, "git_revision": "", "revision_history": [{"30": ""}, {"42": ""}, {"43": ""}, {"44": ""}, {"45": ""}], "hash": "2843035ada40a8569fe513d5be541f17", "format-version": 4, "code-base-name": "tic_tac_toe_frontend", "filename": "tic_tac_toe_frontend/lib/main.dart"}